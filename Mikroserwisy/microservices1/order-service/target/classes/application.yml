spring:
  datasource:
    url: jdbc:mysql://localhost:3306/order-service
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: admin
  jpa:
    hibernate:
      ddl-auto: update
  application:
    name: order-service
#  zipkin:
#    base-url: http://localhost:9411
#  sleuth:
#    sampler:
#      probability: 1.0
  cloud:
    compatibility-verifier:
      enabled: false
#Kafka Properties
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: "event:com.example.orderservice.event.OrderPlacedEvent"

server:
  port: 8085
eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  tracing:
    propagation:
      type: b3, w3c
    sampling:
      probability: 1.0
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        - register-health-indicator: true
        - event-consumer-buffer-size: 10
        - sliding-window-type: COUNT_BASED
        - sliding-window-size: 5
        - failure-rate-threshold: 50
        - wait-duration-in-open-state:
            seconds: 5
        - permitted-number-of-calls-in-half-open-state: 3
        - automatic-transition-from-open-to-half-open-enabled: true

#Resilience4J timeout properties
  timelimiter:
    instances:
      inventory:
        timeout-duration: "3s"

#Resilience4J retry properties
  retry:
    instances:
      inventory:
        - max-attempts: 3
        - wait-duration: "5s"
