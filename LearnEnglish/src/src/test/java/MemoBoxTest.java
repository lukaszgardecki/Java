import org.junit.jupiter.api.*;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import program.Group;
import program.MemoBox;

public class MemoBoxTest {

    MemoBox memoBox = new MemoBox(5, 10, 25, 40, 70);

    @ParameterizedTest(name = "[{index}]   {0},  {1},  {2},  {3},  {4},  {5}" )
    @CsvSource({
            "0, 0, 0, 0, 0, 0, -1",
//            "150, 0, 0, 0, 0, 0, 0",

//            "140, 6, 0, 0, 0, 0, 1",
//            "140, 6, 10, 25, 40, 70, 1",
//            "140, 6, 11, 25, 40, 70, 1",
//            "140, 6, 11, 26, 40, 70, 1",
//            "140, 6, 11, 26, 41, 70, 1",
//            "140, 6, 11, 26, 41, 71, 1",

//            "140, 0, 11, 0, 0, 0, 2",
//            "140, 5, 11, 25, 40, 70, 2",
//            "140, 5, 11, 26, 40, 70, 2",
//            "140, 5, 11, 26, 41, 70, 2",
//            "140, 5, 11, 26, 41, 71, 2",

//            "140, 0, 0, 26, 0, 0, 3",
//            "140, 5, 10, 26, 40, 70, 3",
//            "140, 5, 10, 26, 41, 70, 3",
//            "140, 5, 10, 26, 41, 71, 3",

//            "140, 0, 0, 0, 41, 0, 4",
//            "140, 5, 10, 25, 41, 70, 4",
//            "140, 5, 10, 25, 41, 71, 4",

//            "140, 0, 0, 0, 0, 71, 5",
//            "140, 5, 10, 25, 40, 71, 5",
//
//            "140, 5, 10, 25, 40, 70, 5",
//            "140, 5, 10, 25, 40, 69, 4",
//            "140, 5, 10, 25, 39, 69, 3",
//            "140, 5, 10, 24, 39, 69, 2",
//            "140, 5, 9, 24, 39, 69, 1",
// --------------------------------------------------
//            "0, 6, 0, 0, 0, 0, 1",
//            "0, 6, 10, 25, 40, 70, 1",
//            "0, 6, 11, 25, 40, 70, 1",
//            "0, 6, 11, 26, 40, 70, 1",
//            "0, 6, 11, 26, 41, 70, 1",
//            "0, 6, 11, 26, 41, 71, 1",

            "0, 0, 11, 0, 0, 0, 2",
//            "0, 5, 11, 25, 40, 70, 2",
//            "0, 5, 11, 26, 40, 70, 2",
//            "0, 5, 11, 26, 41, 70, 2",
//            "0, 5, 11, 26, 41, 71, 2",

            "0, 0, 0, 26, 0, 0, 3",
//            "0, 5, 10, 26, 40, 70, 3",
//            "0, 5, 10, 26, 41, 70, 3",
//            "0, 5, 10, 26, 41, 71, 3",

            "0, 0, 0, 0, 41, 0, 4",
//            "0, 5, 10, 25, 41, 70, 4",
//            "0, 5, 10, 25, 41, 71, 4",

            "0, 0, 0, 0, 0, 71, 5",
//            "0, 5, 10, 25, 40, 71, 5",
//
//            "0, 5, 10, 25, 40, 70, 5",
//            "0, 5, 10, 25, 40, 69, 4",
//            "0, 5, 10, 25, 39, 69, 3",
//            "0, 5, 10, 24, 39, 69, 2",
//            "0, 5, 9, 24, 39, 69, 1",
// --------------------------------------------------
//            "0, 3, 7, 24, 35, 65, 3",
            "0, 0, 7, 24, 35, 65, 3",
            "0, 0, 5, 21, 35, 65, 3",
            "0, 0, 10, 20, 35, 65, 2",
            "0, 0, 10, 20, 35, 70, 5",
            "0, 0, 0, 20, 35, 70, 5",
            "0, 0, 0, 25, 35, 71, 5",
            "0, 0, 0, 26, 35, 70, 3",
            "0, 0, 0, 20, 35, 70, 5",
            "0, 0, 0, 9, 35, 70, 5",
            "0, 0, 0, 7, 7, 7, 3",
            "0, 0, 0, 9, 8, 9, 3",
            "0, 0, 0, 1, 6, 3, 4",
            "0, 0, 0, 0, 11, 20, 5",

            "0, 0, 5, 0, 0, 0, 2",
            "0, 0, 5, 20, 0, 0, 3",
            "0, 0, 5, 20, 35, 0, 4",
            "0, 0, 5, 20, 35, 65, 5",
            "0, 0, 0, 0, 35, 65, 5",
            "0, 0, 0, 20, 0, 65, 5",
            "0, 0, 5, 0, 0, 65, 5",
            "0, 0, 5, 0, 35, 0, 4",
            "0, 0, 5, 20, 35, 0, 4",
            "0, 0, 0, 20, 35, 0, 4",
            "0, 0, 0, 20, 0, 0, 3",
            "0, 0, 5, 20, 0, 0, 3",

            "0, 0, 6, 21, 36, 66, 5",
            "0, 0, 9, 24, 36, 66, 3",




    })
    public void shouldReturnCorrectGroup(int g0, int g1, int g2, int g3,
                                         int g4, int g5, int expectedGroup ) {

        memoBox.setGroupSizes(g0, g1, g2, g3, g4, g5);
        //System.out.println(memoBox);
        Assertions.assertEquals(expectedGroup, memoBox.getWord());
    }

}
